name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CI: true
  NODE_VERSION: 22
  PNPM_VERSION: 9

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  # Job: Check changes
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      ui-changed: ${{ steps.check.outputs.ui-changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check for changes in `packages/ui`
        id: check
        run: |
          echo "Checking for changes in packages/ui..."
          if git diff --name-only HEAD^ HEAD | grep -q '^packages/ui/'; then
            echo "::set-output name=ui-changed::true"
            echo "Changes detected in packages/ui"
            echo "Running build and tests for packages/ui"
          else
            echo "::set-output name=ui-changed::false"
            echo "No changes detected in packages/ui"
            echo "Skipping build and tests for packages/ui"
          fi

  # Job: Setup and Build
  build-pol-ui:
    name: 'Pol-ui - Build & Setup 🧙'
    needs: check-changes
    runs-on: ubuntu-latest
    if: needs.check-changes.outputs.ui-changed == 'true' || github.ref == 'refs/heads/main'
    steps:
      - name: Setup Project
        uses: ./.github/actions/setup-env

      - name: Lint Code
        run: pnpm lint

      - name: Build Project 🏗️
        run: pnpm ui build

  # Job: Test
  test-pol-ui:
    name: 'Test Pol-ui 🧪'
    needs: build-pol-ui
    runs-on: ubuntu-latest
    steps:
      - name: Setup Project
        uses: ./.github/actions/setup-env

      - name: Run Tests and Coverage
        run: pnpm ui coverage

  # Job: Release
  release-pol-ui:
    name: '📦 Release'
    needs: test-pol-ui
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Setup Project
        uses: ./.github/actions/setup-env

      - name: Run Semantic Release 🚀
        run: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Package
        run: pnpm run publish:packages
